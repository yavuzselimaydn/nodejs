#!/usr/bin/env node

//Modul bagımlılıkları yüklenir
var app = require('../app');  
var debug = require('debug')('api:server');
var http = require('http');
const Database = require("../db/Database");
const { CONNECTION_STRING, PORT } =  require('../config');


//Port ayarı
var port = normalizePort(PORT);    //verilen port degerini sayısal degere donusturur.
app.set('port', port);                       //express uygulamasının kulllanacagı portu ayarlar                

//HTTP sunucu olusturma
var server = http.createServer(app);  //express uygulamasını temel alarak http sunucusu olusturur.


//Sunucuyu dinleme moduna alma
server.listen(port);                  //sunucunun belirlene port uzerinden dinlenmesini baslattı.
server.on('error', onError);          //sunucu hata ile karsıllatıgında onerror fonku calıstırır.
server.on('listening', onListening);  //sunucu dinlenmeye basladıgında onlistening fonku calıstırır.


//Port Normalizasyonu
function normalizePort(val) {       //girilen portu sayıya dondurur.
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

//Hata İşleyici
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':      //port icin yetki eksikliginde
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':      //port zaten kullanımda ise
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

//Sunucu dinlemeye basladıgında calısan fonk
function onListening() {
  var addr = server.address();                //sunucunun dinlendigi port bilgisini alır.
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);               //dinleme bilgilerini debug modulu loglar

  new Database().connect({CONNECTION_STRING}); //veritabanına baglanmayı dener.
}
